"use strict";(self.webpackChunkochocast=self.webpackChunkochocast||[]).push([[5849],{6538:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>t,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"documentation/tutorial-extras/personalisation","title":"Customization","description":"Customization of the application branding, including name, images, and colors, is centralized in a single file: frontend/public/branding/theme.yaml.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/documentation/03-tutorial-extras/01-personalisation.md","sourceDirName":"documentation/03-tutorial-extras","slug":"/documentation/tutorial-extras/personalisation","permalink":"/en/docs/documentation/tutorial-extras/personalisation","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Extras","permalink":"/en/docs/category/extras"},"next":{"title":"POC - Ubicast Videos Migration - Scaleway","permalink":"/en/docs/documentation/tutorial-extras/ubicast"}}');var o=i(4848),a=i(8453);const s={},l="Customization",t={},c=[{value:"1. Where to configure branding?",id:"1-where-to-configure-branding",level:2},{value:"Configuration Example:",id:"configuration-example",level:3},{value:"2. Typing and validation",id:"2-typing-and-validation",level:2},{value:"3. Automatic color generation",id:"3-automatic-color-generation",level:2},{value:"How it works:",id:"how-it-works",level:3},{value:"Generated CSS Variables:",id:"generated-css-variables",level:3},{value:"4. Usage in components",id:"4-usage-in-components",level:2},{value:"<code>useBranding</code> Hook",id:"usebranding-hook",level:3},{value:"<code>ColorPreview</code> Component",id:"colorpreview-component",level:3},{value:"5. Administration Panel",id:"5-administration-panel",level:2},{value:"Features:",id:"features",level:3},{value:"6. Summary",id:"6-summary",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"customization",children:"Customization"})}),"\n",(0,o.jsxs)(n.p,{children:["Customization of the application branding, including name, images, and colors, is centralized in a single file: ",(0,o.jsx)(n.code,{children:"frontend/public/branding/theme.yaml"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"1-where-to-configure-branding",children:"1. Where to configure branding?"}),"\n",(0,o.jsx)(n.p,{children:"The main file for branding configuration is:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"frontend/public/branding/theme.yaml\n"})}),"\n",(0,o.jsx)(n.p,{children:"In this file, you can define:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["The application name (",(0,o.jsx)(n.code,{children:"appName"}),")"]}),"\n",(0,o.jsxs)(n.li,{children:["Main colors (",(0,o.jsx)(n.code,{children:"colors"}),")"]}),"\n",(0,o.jsxs)(n.li,{children:["Branding images (",(0,o.jsx)(n.code,{children:"images"}),")"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"configuration-example",children:"Configuration Example:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'appName: "OctoCast"\n\ncolors:\n  primary: "#1dac78"      # Primary color (buttons, links, accents)\n  secondary: "#344054"    # Secondary color (texts, borders)\n  background: "#f9fafb"   # Background color\n  accent: "#2ecc71"       # Accent color (alerts, highlights)\n  error: "#dc2626"        # Error color (error messages)\n\nimages:\n  logo: "/branding/ochoIconFull.svg"\n  default_miniature_image: "/branding/exemple/image_tuile_event.png"\n  add: "/branding/add.svg"\n  plus: "/branding/plus.svg"\n  search: "/branding/search.svg"\n  cross: "/branding/cross.svg"\n  user_placeholder: "/branding/persona.png"\n'})}),"\n",(0,o.jsx)(n.h2,{id:"2-typing-and-validation",children:"2. Typing and validation"}),"\n",(0,o.jsx)(n.p,{children:"The schema of this YAML file is defined in:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"frontend/src/branding/type.ts\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"BrandingConfig"})," interface ensures that file properties are properly typed and validated in TypeScript code."]}),"\n",(0,o.jsx)(n.h2,{id:"3-automatic-color-generation",children:"3. Automatic color generation"}),"\n",(0,o.jsx)(n.p,{children:"The branding system simplifies color management by automatically generating variants. From 4-5 base colors, it produces over 50 variants for the entire application."}),"\n",(0,o.jsx)(n.h3,{id:"how-it-works",children:"How it works:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Light colors (50-400)"}),": Progressive blend with white"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Base color (500)"}),": Exact color defined in the file"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Dark colors (600-900)"}),": Progressive blend with black"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["These variants are generated by the ",(0,o.jsx)(n.code,{children:"generateColorVariants"})," function in:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"frontend/src/utils/colorUtils.ts\n"})}),"\n",(0,o.jsx)(n.h3,{id:"generated-css-variables",children:"Generated CSS Variables:"}),"\n",(0,o.jsx)(n.p,{children:"For each base color, the system creates CSS variables:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"--theme-color"}),", ",(0,o.jsx)(n.code,{children:"--theme-color-50"})," to ",(0,o.jsx)(n.code,{children:"--theme-color-900"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"--bg-color"}),", ",(0,o.jsx)(n.code,{children:"--bg-color-50"})," to ",(0,o.jsx)(n.code,{children:"--bg-color-900"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"--accent-color"}),", ",(0,o.jsx)(n.code,{children:"--accent-color-50"})," to ",(0,o.jsx)(n.code,{children:"--accent-color-900"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"--error-color"}),", ",(0,o.jsx)(n.code,{children:"--error-color-50"})," to ",(0,o.jsx)(n.code,{children:"--error-color-900"})]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"4-usage-in-components",children:"4. Usage in components"}),"\n",(0,o.jsxs)(n.h3,{id:"usebranding-hook",children:[(0,o.jsx)(n.code,{children:"useBranding"})," Hook"]}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"useBranding"})," hook is defined in:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"frontend/src/hooks/useBranding.ts\n"})}),"\n",(0,o.jsx)(n.p,{children:"It allows to:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Load the ",(0,o.jsx)(n.code,{children:"theme.yaml"})," file"]}),"\n",(0,o.jsxs)(n.li,{children:["Generate color variants via ",(0,o.jsx)(n.code,{children:"generateColorVariants"})]}),"\n",(0,o.jsx)(n.li,{children:"Dynamically inject CSS variables into the DOM"}),"\n",(0,o.jsx)(n.li,{children:"Return the configuration for use in React components"}),"\n"]}),"\n",(0,o.jsxs)(n.h3,{id:"colorpreview-component",children:[(0,o.jsx)(n.code,{children:"ColorPreview"})," Component"]}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"ColorPreview"})," component is used to display generated color variants. It is defined in:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"frontend/src/components/ReworkComponents/generic/ColorPreview/ColorPreview.tsx\n"})}),"\n",(0,o.jsx)(n.h2,{id:"5-administration-panel",children:"5. Administration Panel"}),"\n",(0,o.jsxs)(n.p,{children:["The administration panel allows you to modify branding in real-time. It is accessible at the URL: ",(0,o.jsx)(n.code,{children:"/admin"})," (administrator rights required)."]}),"\n",(0,o.jsx)(n.h3,{id:"features",children:"Features:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Modify the application name"}),"\n",(0,o.jsx)(n.li,{children:"Change main colors"}),"\n",(0,o.jsx)(n.li,{children:"Preview gradients in real-time"}),"\n",(0,o.jsx)(n.li,{children:"Modify branding images"}),"\n",(0,o.jsx)(n.li,{children:"Save configuration on the server"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"The corresponding file is:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"frontend/src/pages/adminPanel/adminPanel.tsx\n"})}),"\n",(0,o.jsx)(n.admonition,{title:"Detailed Guide",type:"tip",children:(0,o.jsxs)(n.p,{children:["For a complete and detailed guide to the administration panel with explanations of each field and feature, see the ",(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"/en/docs/documentation/tutorial-extras/panneau-admin",children:"Administration Panel Guide"})}),"."]})}),"\n",(0,o.jsx)(n.h2,{id:"6-summary",children:"6. Summary"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"4-5 defined colors"})," \u2192 ",(0,o.jsx)(n.strong,{children:"50+ CSS variables automatically generated"})]}),"\n",(0,o.jsx)(n.li,{children:"Automatic gradient system (variants 50-900)"}),"\n",(0,o.jsx)(n.li,{children:"Administration panel for real-time modification"}),"\n",(0,o.jsxs)(n.li,{children:["All branding centralized in ",(0,o.jsx)(n.code,{children:"theme.yaml"})]}),"\n",(0,o.jsx)(n.li,{children:"Modular and typed architecture with TypeScript"}),"\n",(0,o.jsx)(n.li,{children:"Automatic reload after save to apply changes"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>l});var r=i(6540);const o={},a=r.createContext(o);function s(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);