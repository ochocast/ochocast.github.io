"use strict";(self.webpackChunkochocast=self.webpackChunkochocast||[]).push([[6729],{2815:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"documentation/tools/Front-end","title":"Front-End","description":"Description","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/documentation/02-tools/01-Front-end.md","sourceDirName":"documentation/02-tools","slug":"/documentation/tools/Front-end","permalink":"/en/docs/documentation/tools/Front-end","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Outils","permalink":"/en/docs/category/outils"},"next":{"title":"Backend Diamond Architecture Documentation","permalink":"/en/docs/documentation/tools/Backend-Architecture"}}');var i=t(4848),r=t(8453);const s={},a="Front-End",c={},d=[{value:"Description",id:"description",level:2},{value:"Installation and Prerequisites",id:"installation-and-prerequisites",level:2},{value:"Frontend Structure",id:"frontend-structure",level:2},{value:"UX / UI Design",id:"ux--ui-design",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"front-end",children:"Front-End"})}),"\n",(0,i.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(n.p,{children:"The frontend of the streaming platform."}),"\n",(0,i.jsx)(n.p,{children:"The frontend of an application refers to the user interface (UI) and user experience (UX) components that users interact with directly. It's the part of the software that runs on the client side, meaning it's executed in the user's web browser or device."}),"\n",(0,i.jsx)(n.h2,{id:"installation-and-prerequisites",children:"Installation and Prerequisites"}),"\n",(0,i.jsxs)(n.p,{children:["Once you have configured the database and Keycloak, don't forget to configure the environment variables in a ",(0,i.jsx)(n.code,{children:".env"})," file. You can copy the ",(0,i.jsx)(n.code,{children:"frontend/.env.example"})," file to a new ",(0,i.jsx)(n.code,{children:".env"})," file in the frontend folder."]}),"\n",(0,i.jsx)(n.p,{children:"You can now proceed to run the frontend and backend (you can run both at the same time from the project root)."}),"\n",(0,i.jsxs)(n.p,{children:["From the ",(0,i.jsx)(n.code,{children:"frontend"})," folder, if you haven't installed the necessary dependencies yet, run:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm install\n"})}),"\n",(0,i.jsx)(n.p,{children:"To deploy locally:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"cd ./frontend\ncp .env.example .env\nnpm run start\n"})}),"\n",(0,i.jsx)(n.h2,{id:"frontend-structure",children:"Frontend Structure"}),"\n",(0,i.jsx)(n.p,{children:"In frontend/src, you will find several folders with different purposes."}),"\n",(0,i.jsx)(n.p,{children:"Public: This folder contains static files that are served directly by the web server. These files are not processed by the build system and are accessible via your application's root URL. Common files in this folder include index.html, favicon, and other resources that need to be publicly accessible."}),"\n",(0,i.jsx)(n.p,{children:"Assets: This folder contains all static files such as images, icons, media, and other resources that are not expected to change during application runtime. These files are essential for the application's interface and design."}),"\n",(0,i.jsx)(n.p,{children:"Components: In this folder, you will find different layouts and elements used in the various pages of the application. They are reusable, can adapt to different properties, and are often separated into small elements."}),"\n",(0,i.jsx)(n.p,{children:"Pages: Pages are also components. However, they are not intended to be reused and represent entire views of the application. Each file or subfolder in the pages folder typically corresponds to a specific route in your application. This structure helps maintain a clear separation between different sections of your user interface."}),"\n",(0,i.jsx)(n.p,{children:"Utils: This folder typically contains interfaces, utility functions, or helper modules that provide commonly used functionality throughout the application. The purpose of this folder is to centralize and organize functions that are not tied to a specific component or module. For example, a date formatting function or an interface."}),"\n",(0,i.jsx)(n.h2,{id:"ux--ui-design",children:"UX / UI Design"}),"\n",(0,i.jsx)(n.p,{children:"The frontend application design must comply with the OchoCast design system established in Figma."})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var o=t(6540);const i={},r=o.createContext(i);function s(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);