"use strict";(self.webpackChunkochocast=self.webpackChunkochocast||[]).push([[4829],{41:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"documentation/tools/Base de donnees","title":"Database","description":"In this project, we use TypeORM to interact with the PostgreSQL database.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/documentation/02-tools/06-Base de donnees.md","sourceDirName":"documentation/02-tools","slug":"/documentation/tools/Base de donnees","permalink":"/en/docs/documentation/tools/Base de donnees","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"CI/CD","permalink":"/en/docs/documentation/tools/CI-CD"},"next":{"title":"Extras","permalink":"/en/docs/category/extras"}}');var i=n(4848),o=n(8453);const r={},s="Database",l={},c=[{value:"1- Create a migration",id:"1--create-a-migration",level:2},{value:"2- Execute a migration",id:"2--execute-a-migration",level:2},{value:"3- Production deployment",id:"3--production-deployment",level:2},{value:"4- Troubleshooting",id:"4--troubleshooting",level:2},{value:"4.1- Changes already applied",id:"41--changes-already-applied",level:3},{value:"4.2- A NULL column is problematic",id:"42--a-null-column-is-problematic",level:3}];function d(e){const t={h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"database",children:"Database"})}),"\n",(0,i.jsx)(t.p,{children:"In this project, we use TypeORM to interact with the PostgreSQL database."}),"\n",(0,i.jsx)(t.p,{children:'When you change a property of an entity (example file: /backend/src/tags/infra/gateways/entities/tag.entity.ts), it changes the description of the object in the database (for example, adding a "toto" field in the entity will add a "toto" column to the tag_entity table).'}),"\n",(0,i.jsx)(t.p,{children:"These changes can be applied automatically by creating and executing a migration."}),"\n",(0,i.jsx)(t.h2,{id:"1--create-a-migration",children:"1- Create a migration"}),"\n",(0,i.jsx)(t.p,{children:"After changing the fields in the entity, open a terminal in the /backend/ folder"}),"\n",(0,i.jsxs)(t.p,{children:['To generate a migration, use the command "npm run migration',":generate",'"']}),"\n",(0,i.jsx)(t.p,{children:"A new migration has been created in the /backend/migrations folder, you must ensure that the migration changes (in PostgreSQL queries) match the changes made in the entity."}),"\n",(0,i.jsx)(t.h2,{id:"2--execute-a-migration",children:"2- Execute a migration"}),"\n",(0,i.jsxs)(t.p,{children:['To execute a migration (and therefore apply the changes to the database), in the /backend/ folder, use the command "npm run migration',":run",'".']}),"\n",(0,i.jsx)(t.p,{children:"If there are no error messages, the changes have been applied to the local database."}),"\n",(0,i.jsx)(t.h2,{id:"3--production-deployment",children:"3- Production deployment"}),"\n",(0,i.jsx)(t.p,{children:"Thanks to CI/CD, migrations that have been pushed are automatically executed during production deployment with the same commands as locally"}),"\n",(0,i.jsx)(t.h2,{id:"4--troubleshooting",children:"4- Troubleshooting"}),"\n",(0,i.jsx)(t.p,{children:"If a problem occurs during migration execution, there are several points to check:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"have the changes already been applied without the migration?"}),"\n",(0,i.jsx)(t.li,{children:"are the changes impossible to apply due to constraints (creating a new column that cannot be NULL and without a default value)"}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"41--changes-already-applied",children:"4.1- Changes already applied"}),"\n",(0,i.jsx)(t.p,{children:"If all migration changes are already in the database, it is possible to directly add the migration to the migrations performed in the PostgreSQL database."}),"\n",(0,i.jsx)(t.p,{children:"To solve this problem:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:'manually connect to the database and check the "migrations" table'}),"\n",(0,i.jsx)(t.li,{children:'insert into the "migrations" table the following values: the migration identifier (name) and the current timestamp (timestamp)'}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:['verify that the migration has been added by rerunning the command "npm run migration',":run",'"']}),"\n",(0,i.jsx)(t.h3,{id:"42--a-null-column-is-problematic",children:"4.2- A NULL column is problematic"}),"\n",(0,i.jsx)(t.p,{children:"Add a default value or remove the NOT NULL constraint from the column in the entity, delete the problematic migration file, then rerun the migration generation and execution commands."})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>s});var a=n(6540);const i={},o=a.createContext(i);function r(e){const t=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),a.createElement(o.Provider,{value:t},e.children)}}}]);