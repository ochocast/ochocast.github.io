"use strict";(self.webpackChunkochocast=self.webpackChunkochocast||[]).push([[3534],{9230:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"documentation/tutorial-extras/ubicast","title":"POC - Ubicast Videos Migration - Scaleway","description":"This script allows you to retrieve videos from the Ubicast platform and store them on Scaleway using AWS S3. It also saves video metadata in the project\'s PostgreSQL database.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/documentation/03-tutorial-extras/02-ubicast.md","sourceDirName":"documentation/03-tutorial-extras","slug":"/documentation/tutorial-extras/ubicast","permalink":"/en/docs/documentation/tutorial-extras/ubicast","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Customization","permalink":"/en/docs/documentation/tutorial-extras/personalisation"},"next":{"title":"RTMP Server","permalink":"/en/docs/documentation/tutorial-extras/rtmpServer"}}');var r=i(4848),t=i(8453);const d={},l="POC - Ubicast Videos Migration - Scaleway",o={},a=[{value:"Features",id:"features",level:2},{value:"Installing Dependencies",id:"installing-dependencies",level:2},{value:"Running the Script",id:"running-the-script",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Main Features",id:"main-features",level:3},{value:"Improvements to Implement (TODO)",id:"improvements-to-implement-todo",level:2},{value:"Configuration",id:"configuration-1",level:2},{value:"1. <strong>Connection Variables</strong>",id:"1-connection-variables",level:3},{value:"2. <strong>PostgreSQL Database</strong>",id:"2-postgresql-database",level:3},{value:"Detailed Operation",id:"detailed-operation",level:2},{value:"Error Handling",id:"error-handling",level:2},{value:"Performance Tracking",id:"performance-tracking",level:2},{value:"Execution and Logs",id:"execution-and-logs",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"poc---ubicast-videos-migration---scaleway",children:"POC - Ubicast Videos Migration - Scaleway"})}),"\n",(0,r.jsx)(n.p,{children:"This script allows you to retrieve videos from the Ubicast platform and store them on Scaleway using AWS S3. It also saves video metadata in the project's PostgreSQL database."}),"\n",(0,r.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Connection to the Ubicast API to retrieve videos."}),"\n",(0,r.jsx)(n.li,{children:"Storage of videos on Scaleway via AWS S3."}),"\n",(0,r.jsx)(n.li,{children:"Recording of video metadata in the project's PostgreSQL database."}),"\n",(0,r.jsxs)(n.li,{children:["Video search can be done in two ways:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Loading video identifiers (",(0,r.jsx)(n.code,{children:"oids"}),") from a CSV file."]}),"\n",(0,r.jsx)(n.li,{children:"Exhaustive video search by browsing various search terms."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h1,{id:"installation-and-execution",children:"Installation and Execution"}),"\n",(0,r.jsx)(n.h2,{id:"installing-dependencies",children:"Installing Dependencies"}),"\n",(0,r.jsx)(n.p,{children:"Before running the script, install the necessary dependencies with the command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"npm install\n"})}),"\n",(0,r.jsx)(n.h2,{id:"running-the-script",children:"Running the Script"}),"\n",(0,r.jsx)(n.p,{children:"Run the script with the following command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"node downloadOctoVideo.js\n"})}),"\n",(0,r.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsx)(n.p,{children:"The script uses several environment variables to store sensitive information:"}),"\n",(0,r.jsx)(n.h3,{id:"main-features",children:"Main Features"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Video retrieval (two methods, to see which is most efficient):"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["By direct request via their identifiers (",(0,r.jsx)(n.code,{children:"oids"}),")."]}),"\n",(0,r.jsx)(n.li,{children:"By exhaustive search on the UbiCast API (currently commented in the code)."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Download and upload:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Downloading videos from the UbiCast API."}),"\n",(0,r.jsx)(n.li,{children:"Upload to a Scaleway S3 bucket."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Database:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Connection to a PostgreSQL database."}),"\n",(0,r.jsx)(n.li,{children:"Insertion of video metadata."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"improvements-to-implement-todo",children:"Improvements to Implement (TODO)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Integrate UbiCast thumbnails into the database."}),"\n",(0,r.jsx)(n.li,{children:"Retrieve and store UbiCast thumbnails on Scaleway."}),"\n",(0,r.jsx)(n.li,{children:"Improve video search (via API Search or Excel file)."}),"\n",(0,r.jsx)(n.li,{children:"Automate the retrieval of all UbiCast videos."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"configuration-1",children:"Configuration"}),"\n",(0,r.jsxs)(n.h3,{id:"1-connection-variables",children:["1. ",(0,r.jsx)(n.strong,{children:"Connection Variables"})]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Variable"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"API_KEY"})}),(0,r.jsx)(n.td,{children:"API key to access the UbiCast API."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"API_BASE_URL"})}),(0,r.jsx)(n.td,{children:"UbiCast API URL."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"BUCKET_NAME"})}),(0,r.jsx)(n.td,{children:"Name of the Scaleway bucket where videos will be stored."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"REGION"})}),(0,r.jsx)(n.td,{children:"Scaleway service region."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"S3_ACCESS_KEY"})}),(0,r.jsx)(n.td,{children:"Scaleway S3 access key."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"S3_SECRET_KEY"})}),(0,r.jsx)(n.td,{children:"Scaleway S3 secret key."})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"Sensitive variable values must be configured in the .env file or environment secrets."}),"\n",(0,r.jsxs)(n.h3,{id:"2-postgresql-database",children:["2. ",(0,r.jsx)(n.strong,{children:"PostgreSQL Database"})]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Value"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"user"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"octocast-db-prod"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"host"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"51.159.205.159"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"database"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"rdb"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"password"})}),(0,r.jsx)(n.td,{children:"Password required"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"port"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"5253"})})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"detailed-operation",children:"Detailed Operation"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Database Connection and Closure"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"connectDatabase()"}),": Establishes the PostgreSQL connection."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"closeDatabase()"}),": Closes the PostgreSQL connection."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Loading Videos"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"loadOidsFromCsv(filePath)"}),": Loads a list of identifiers (oids) from a CSV file extracted from Ubicast, containing all information about hosted videos."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"fetchAllVideosExhaustively()"}),": Retrieves all videos from their ",(0,r.jsx)(n.code,{children:"oids"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Retrieving Videos"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"fetchVideoDetails(oid)"}),": Retrieves complete metadata for a video."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"fetchVideosWithSearch(searchTerm)"}),": Performs a video search by keyword."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Processing Videos"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"addUniqueVideos(videos)"}),": Adds videos to the list ensuring there are no duplicates."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"processVideo(video)"}),": Downloads, uploads, and saves a video to the database."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Complete Migration"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"migrateVideos()"}),": Orchestrates the entire process."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,r.jsx)(n.p,{children:"The script includes several error handling mechanisms:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Verification of API and database connections."}),"\n",(0,r.jsx)(n.li,{children:"Verification of HTTP status of API requests."}),"\n",(0,r.jsx)(n.li,{children:"Upload error handling with progress tracking."}),"\n",(0,r.jsx)(n.li,{children:"Verification and management of conflicts during database insertion."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"performance-tracking",children:"Performance Tracking"}),"\n",(0,r.jsx)(n.p,{children:"At the end of script execution, a summary of operations is displayed:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Number of videos added to the database."}),"\n",(0,r.jsx)(n.li,{children:"Number of videos uploaded to Scaleway."}),"\n",(0,r.jsx)(n.li,{children:"Number of migration failures."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"execution-and-logs",children:"Execution and Logs"}),"\n",(0,r.jsx)(n.p,{children:"The script displays detailed logs to track progress:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Database connection successful."}),"\n",(0,r.jsx)(n.li,{children:'Search with term: "A"'}),"\n",(0,r.jsx)(n.li,{children:"Downloading video: example.mp4"}),"\n",(0,r.jsx)(n.li,{children:"Uploading video to Scaleway: example.mp4"}),"\n",(0,r.jsx)(n.li,{children:'Video "example.mp4" uploaded successfully.'}),"\n",(0,r.jsx)(n.li,{children:'Video "example.mp4" inserted into database.'}),"\n",(0,r.jsx)(n.li,{children:"Migration completed!"}),"\n",(0,r.jsx)(n.li,{children:"Total number of videos added to database: 42"}),"\n",(0,r.jsx)(n.li,{children:"Total number of videos uploaded to Scaleway bucket: 38"}),"\n",(0,r.jsx)(n.li,{children:"Total number of failed videos: 4"}),"\n"]}),"\n",(0,r.jsx)(n.h1,{id:"author",children:"Author"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Developer(s): Oriane Margelisch"}),"\n",(0,r.jsx)(n.li,{children:"Last update: 2024-01-29"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>l});var s=i(6540);const r={},t=s.createContext(r);function d(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);