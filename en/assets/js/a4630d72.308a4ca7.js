"use strict";(self.webpackChunkochocast=self.webpackChunkochocast||[]).push([[2794],{8595:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>d,contentTitle:()=>o,default:()=>a,frontMatter:()=>l,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"documentation/tutorial-extras/rtmpServer","title":"RTMP Server","description":"Docker RTMP-HLS","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/documentation/03-tutorial-extras/03-rtmpServer.md","sourceDirName":"documentation/03-tutorial-extras","slug":"/documentation/tutorial-extras/rtmpServer","permalink":"/en/docs/documentation/tutorial-extras/rtmpServer","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"POC - Ubicast Videos Migration - Scaleway","permalink":"/en/docs/documentation/tutorial-extras/ubicast"},"next":{"title":"WebSocket Server","permalink":"/en/docs/documentation/tutorial-extras/WebSocketServer"}}');var t=s(4848),i=s(8453);const l={},o="RTMP Server",d={},c=[{value:"Docker RTMP-HLS",id:"docker-rtmp-hls",level:2},{value:"Description",id:"description",level:2},{value:"Features",id:"features",level:2},{value:"Usage",id:"usage",level:2},{value:"To build the image",id:"to-build-the-image",level:3},{value:"To run the server",id:"to-run-the-server",level:3},{value:"To stream to the server",id:"to-stream-to-the-server",level:3},{value:"To view the stream",id:"to-view-the-stream",level:3},{value:"Copyright",id:"copyright",level:2},{value:"Deployment",id:"deployment",level:2}];function h(e){const r={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"rtmp-server",children:"RTMP Server"})}),"\n",(0,t.jsx)(r.h2,{id:"docker-rtmp-hls",children:"Docker RTMP-HLS"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Docker image for video streaming server that supports RTMP, HLS, and DASH streams."})}),"\n",(0,t.jsx)(r.h2,{id:"description",children:"Description"}),"\n",(0,t.jsxs)(r.p,{children:["This Docker image can be used to create a video streaming server that supports ",(0,t.jsx)(r.a,{href:"https://en.wikipedia.org/wiki/Real-Time_Messaging_Protocol",children:(0,t.jsx)(r.strong,{children:"RTMP"})}),", ",(0,t.jsx)(r.a,{href:"https://en.wikipedia.org/wiki/HTTP_Live_Streaming",children:(0,t.jsx)(r.strong,{children:"HLS"})}),", ",(0,t.jsx)(r.a,{href:"https://en.wikipedia.org/wiki/Dynamic_Adaptive_Streaming_over_HTTP",children:(0,t.jsx)(r.strong,{children:"DASH"})})," streams out of the box. It also enables adaptive streaming and custom transcoding of video streams.\nThe module is built from source on an Alpine Linux base image."]}),"\n",(0,t.jsx)(r.h2,{id:"features",children:"Features"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["The backend is ",(0,t.jsx)(r.a,{href:"http://nginx.org/",children:(0,t.jsx)(r.strong,{children:"Nginx"})})," with the ",(0,t.jsx)(r.a,{href:"https://github.com/arut/nginx-rtmp-module",children:(0,t.jsx)(r.strong,{children:"nginx-rtmp-module"})}),"."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"https://www.ffmpeg.org/",children:(0,t.jsx)(r.strong,{children:"FFmpeg"})})," for transcoding and adaptive streaming."]}),"\n",(0,t.jsxs)(r.li,{children:["Default settings:","\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"RTMP enabled"}),"\n",(0,t.jsx)(r.li,{children:"HLS enabled (adaptive, 5 variants)"}),"\n",(0,t.jsx)(r.li,{children:"DASH enabled"}),"\n",(0,t.jsx)(r.li,{children:"Another Nginx configuration file is also provided to allow streaming without transcoding via FFmpeg."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["RTMP stream statistics page accessible at ",(0,t.jsx)(r.code,{children:"http://<server_ip>:<server_port>/stats"}),"."]}),"\n",(0,t.jsxs)(r.li,{children:["Web video players available (based on ",(0,t.jsx)(r.a,{href:"https://videojs.com/",children:"video.js"})," and ",(0,t.jsx)(r.a,{href:"https://github.com/video-dev/hls.js/",children:"hls.js"}),") in ",(0,t.jsx)(r.code,{children:"/usr/local/nginx/html/players"}),"."]}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"The current image is built with:"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"Nginx 1.21.5 (compiled from source) (newer versions of Nginx seem to have issues with the stats page (pid 8))"}),"\n",(0,t.jsx)(r.li,{children:"Nginx-rtmp-module 1.2.2 (compiled from source)"}),"\n",(0,t.jsx)(r.li,{children:"FFmpeg 6.0 (compiled from source)"}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(r.h3,{id:"to-build-the-image",children:"To build the image"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:"docker build -t octocast_rtmp_server .\n"})}),"\n",(0,t.jsx)(r.h3,{id:"to-run-the-server",children:"To run the server"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:"docker run -d -p 1935:1935 -p 8080:8080 octocast_rtmp_server\n"})}),"\n",(0,t.jsxs)(r.p,{children:["where ",(0,t.jsx)(r.code,{children:"1935"})," is the RTMP port and ",(0,t.jsx)(r.code,{children:"8080"})," is the HTTP port."]}),"\n",(0,t.jsx)(r.h3,{id:"to-stream-to-the-server",children:"To stream to the server"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Stream live RTMP content to:"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:"rtmp://<server ip>:1935/live/<stream_key>\n"})}),"\n",(0,t.jsxs)(r.p,{children:["where ",(0,t.jsx)(r.code,{children:"<stream_key>"})," is the stream key you specify."]}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsxs)(r.strong,{children:["Configure ",(0,t.jsx)(r.a,{href:"https://obsproject.com/",children:"OBS"})," to stream content:"]})," ",(0,t.jsx)("br",{}),"\nGo to Settings > Stream, choose the following settings:"]}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:"Service: Custom Streaming Server."}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsxs)(r.p,{children:["Server: ",(0,t.jsx)(r.code,{children:"rtmp://<server_ip>:1935/live"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsxs)(r.p,{children:["Stream Key: choose what you want, however the provided video players assume the stream key is ",(0,t.jsx)(r.code,{children:"test"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"to-view-the-stream",children:"To view the stream"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:(0,t.jsxs)(r.strong,{children:["With ",(0,t.jsx)(r.a,{href:"https://www.videolan.org/vlc/index.html",children:"VLC"}),":"]})}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:"Go to Media > Open Network Stream."}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsxs)(r.p,{children:["Enter the stream URL: ",(0,t.jsx)(r.code,{children:"rtmp://<server_ip>:1935/live/<stream-key>"}),"\nReplace ",(0,t.jsx)(r.code,{children:"<server_ip>"})," with the server's IP address, and ",(0,t.jsx)(r.code,{children:"<stream-key>"})," with the stream key you used to configure the stream."]}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsxs)(r.p,{children:["For HLS and DASH, the URLs are in the forms:",(0,t.jsx)(r.br,{}),"\n",(0,t.jsx)(r.code,{children:"http://<server_ip>:8080/hls/<stream-key>.m3u8"})," and",(0,t.jsx)(r.br,{}),"\n",(0,t.jsx)(r.code,{children:"http://<server_ip>:8080/dash/<stream-key>_src.mpd"})," respectively."]}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:"Click Play."}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"With the provided web players: (provided in the poc repo)"}),(0,t.jsx)(r.br,{}),"\n","The demo players assume the stream key is called ",(0,t.jsx)(r.code,{children:"test"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsxs)(r.p,{children:["To play HLS content: ",(0,t.jsx)(r.code,{children:"http://<server_ip>:8080/players/hls.html"})]}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsxs)(r.p,{children:["To play HLS content with the hls.js library: ",(0,t.jsx)(r.code,{children:"http://<server_ip>:8080/players/hls_hlsjs.html"})]}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsxs)(r.p,{children:["To play DASH content: ",(0,t.jsx)(r.code,{children:"http://<server_ip>:8080/players/dash.html"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"copyright",children:"Copyright"}),"\n",(0,t.jsx)(r.p,{children:"Published under the MIT license."}),"\n",(0,t.jsx)(r.h2,{id:"deployment",children:"Deployment"}),"\n",(0,t.jsxs)(r.p,{children:["RTMP retrieval link: ",(0,t.jsx)(r.code,{children:"rg.fr-par.scw.cloud/rtmp-server-images/octocast_rtmp_server:latest"})]})]})}function a(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,r,s)=>{s.d(r,{R:()=>l,x:()=>o});var n=s(6540);const t={},i=n.createContext(t);function l(e){const r=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),n.createElement(i.Provider,{value:r},e.children)}}}]);